WITH CTE AS (
    SELECT DISTINCT PMT.TRANSFER_ID,COALESCE(PCL.PAYOUT_CLASSIFICATION,PMT.PAYOUT_CLASSIFICATION) AS TRANSFER_STATE
    FROM SANDBOX_DB.SANDBOX_ALL.PKR_MASTER_TABLE PMT
    LEFT JOIN  SANDBOX_DB.SANDBOX_ALL.PKR_CHANGE_LOG PCL ON PCL.TRANSFER_ID = PMT.TRANSFER_ID

),

MAIN_TABLE AS (SELECT
DISTINCT CTE.TRANSFER_ID AS TRANSFER_ID,
LAST_VALUE(CTE.TRANSFER_STATE) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS TRANSFER_STATE,
LAST_VALUE(WI.STATE) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS WORK_ITEM_STATE,
LAST_VALUE(SOURCE_CURRENCY) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS SOURCE_CURRENCY,
LAST_VALUE(TARGET_CURRENCY) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS TARGET_CURRENCY,
LAST_VALUE(INVOICE_VALUE_LOCAL) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS AMOUNT_IN_SOURCE_CCY,
LAST_VALUE(FEE_VALUE_LOCAL) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS FEES_IN_SOURCE_CCY,
LAST_VALUE(INVOICE_VALUE_GBP) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS AMOUNT_IN_GBP,
LAST_VALUE(WI.LAST_UPDATED ) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS LAST_UPDATED,
LAST_VALUE(PKRC.CATEGORY) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS CATEGORY,
LAST_VALUE(PKRC.NOTIFICATION_CATEGORY) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS NOTIFICATION_CATEGORY,
LAST_VALUE(PKRC.PAYIN_CHANNEL) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS PAYIN_CHANNEL,
LAST_VALUE(RAS.USER_PROFILE_ID) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS USER_PROFILE_ID,
LAST_VALUE(RAS.USER_ID) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS USER_ID,
LAST_VALUE(IFF(WI.STATE = 'CLOSED',WI.LAST_UPDATED,NULL) ) OVER (PARTITION BY CTE.TRANSFER_ID ORDER BY LAST_UPDATED) AS DATE_CLOSED
FROM CTE
         INNER JOIN FX.WORK_ITEM WI ON WI.REQUEST_ID = CTE.TRANSFER_ID
         INNER JOIN REPORTS.REPORT_ACTION_STEP RAS ON RAS.REQUEST_ID = CTE.TRANSFER_ID
         LEFT JOIN  SANDBOX_DB.SANDBOX_ALL.PKR_CLASSIFICATION PKRC ON PKRC.TRANSFER_ID = CTE.TRANSFER_ID

WHERE TRUE
 AND RAS.NOT_DUPLICATE = 1
 AND WI.TYPE = 'PROBLEMATIC_OOPS'
 AND CTE.TRANSFER_STATE = 'DPO')



-- ,BALANCE_VALIDATION AS (
-- select t.user_profile_id
-- from balance.account a, balance.balance b, balance.ledger l, transfer.transfer t, MAIN_TABLE MT
-- where TRUE
-- and t.user_profile_id = a.profile_id
-- AND MT.USER_PROFILE_ID = a.profile_id
-- and a.active = true
-- and b.account_id = a.id
-- and l.balance_id = b.id
-- and b.type = 'STANDARD'
-- and l.type = 'AVAILABLE'
-- group by t.user_profile_id having count(l.balance_id) > 0)
--
--
--
-- SELECT
-- IFF(BV.USER_PROFILE_ID IS NOT NULL,TRUE,FALSE) AS HAS_ACTIVE_BALANCE,
-- COUNT(TRANSFER_ID)
-- FROM MAIN_TABLE
--     LEFT JOIN BALANCE_VALIDATION BV ON BV.USER_PROFILE_ID = MAIN_TABLE.USER_PROFILE_ID
-- WHERE TRUE
-- AND CATEGORY IN ('N4','N3')
-- AND WORK_ITEM_STATE != 'CLOSED'
-- AND AMOUNT_IN_GBP > 800
-- GROUP BY 1

SELECT
TRANSFER_ID,
SOURCE_CURRENCY,
TARGET_CURRENCY,
AMOUNT_IN_SOURCE_CCY,
FEES_IN_SOURCE_CCY,
AMOUNT_IN_GBP,
LAST_UPDATED,
CATEGORY,
PAYIN_CHANNEL,
USER_PROFILE_ID,
USER_ID,
IFF(UPPER(BA.ACTIVE) = 'TRUE' AND LIST_PRODUCT_LVL_1 LIKE '%BALANCE%',TRUE,FALSE) AS HAS_ACTIVE_BALANCE
FROM MAIN_TABLE
    LEFT JOIN BALANCE.ACCOUNT BA ON BA.PROFILE_ID = MAIN_TABLE.USER_PROFILE_ID
    LEFT JOIN REPORTS.PROFILE_LIFETIME_ACTIVITY PLA ON PLA.PROFILE_ID = MAIN_TABLE.USER_PROFILE_ID

WHERE TRUE
AND CATEGORY IN ('N4','N3')
AND WORK_ITEM_STATE != 'CLOSED'
AND AMOUNT_IN_GBP > 800
